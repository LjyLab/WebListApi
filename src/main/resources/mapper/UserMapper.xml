<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljy.demo.dao.UserMapper">
  <!-- 查找所有用户 -->
    <select id="listAll" resultType="User">
      select * from user
    </select>

<!--  <select id="listAll" resultMap="listAllMap">-->
<!--    select u.account,u.password,u.name,u.info,d.name-->
<!--    from-->
<!--    user u left join dept d on u.dept = d.id-->
<!--  </select>-->

<!--  <resultMap id="listAllMap" type="User">-->
<!--    <id property="id" column="id"></id>-->
<!--    <result property="account" column="account"></result>-->
<!--    <result property="password" column="password"></result>-->
<!--    <result property="name" column="name"></result>-->
<!--    <result property="info" column="info"></result>-->
<!--    <association property="dept" javaType="Dept" />-->
<!--&lt;!&ndash;    <association property="dept" javaType="Dept" >&ndash;&gt;-->
<!--&lt;!&ndash;      <result property="name" column="name"/>&ndash;&gt;-->
<!--&lt;!&ndash;    </association>&ndash;&gt;-->
<!--  </resultMap>-->


  <!-- 添加用户 -->
  <insert id="insert">
    insert into user(account, password, name, info) values (#{account}, #{password}, #{name}, #{info})
  </insert>
  
  <!-- 删除用户 -->
  <delete id="deleteById">
    delete from user where id = #{id}
  </delete>
  
  <!-- 更新用户 -->
  <update id="update">
    update user set account = #{account}, password = #{password}, name = #{name}, info = #{info} where id = #{id}
  </update>
  
  <!-- 根据id查找用户 -->
  <select id="getById" resultType="User">
    select * from user where id = #{id}
  </select>


  <select id="getUserByList" resultMap="UserByList">
    select u.* , d.id deptid,d.uid deptuid ,d.deptname deptname
    from user u left join dept d on u.deptid = d.id
--     select u.id,u.account,u.password,u.name,u.info,
--            d.id deptid,d.uid deptuid ,d.deptname deptname
--       from user u left join dept d on u.deptid = d.id
  </select>
  <resultMap id="UserByList" type="user">
    <id property="id" column="id"></id>
    <result property="account" column="account"></result>
    <result property="password" column="password"></result>
    <result property="name" column="name"></result>
    <result property="info" column="info"></result>
    <result property="deptid" column="deptid"></result>
    <result property="createTime" column="createTime"></result>
    <result property="updateTime" column="updateTime"></result>
    <!--    复杂的属性 用于单独处理  对象association 集合collection-->
    <association property="dep" javaType="Dept">
      <result property="id" column="deptid"></result>
      <result property="uid" column="deptuid"></result>
      <result property="deptname" column="deptname"></result>
    </association>
  </resultMap>



<!--  <select id="getUserByList" resultMap="UserByList">-->
<!--    select * from user-->
<!--  </select>-->
<!--  <resultMap id="UserByList" type="user">-->
<!--    <result property="id" column="id"></result>-->
<!--    <result property="account" column="account"></result>-->
<!--    <result property="password" column="password"></result>-->
<!--    <result property="name" column="name"></result>-->
<!--    <result property="info" column="info"></result>-->
<!--&lt;!&ndash;    复杂的属性 用于单独处理  对象association 集合collection&ndash;&gt;-->
<!--    <association property="dept" column="dep" javaType="Dept" select="getUserByDept"></association>-->
<!--  </resultMap>-->
<!--  <select id="getUserByDept" resultType="Dept">-->
<!--    select * from dept-->
<!--  </select>-->
</mapper>